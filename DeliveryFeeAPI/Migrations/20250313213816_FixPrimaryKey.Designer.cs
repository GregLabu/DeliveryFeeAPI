// <auto-generated />
using System;
using DeliveryFeeAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeliveryFeeAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250313213816_FixPrimaryKey")]
    partial class FixPrimaryKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("DeliveryFeeAPI.Models.DeliveryFeeRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("BaseFee")
                        .HasColumnType("REAL");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DeliveryFeeRules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseFee = 4.0,
                            City = "Tallinn",
                            VehicleType = "Car"
                        },
                        new
                        {
                            Id = 2,
                            BaseFee = 3.5,
                            City = "Tallinn",
                            VehicleType = "Scooter"
                        },
                        new
                        {
                            Id = 3,
                            BaseFee = 3.0,
                            City = "Tallinn",
                            VehicleType = "Bike"
                        },
                        new
                        {
                            Id = 4,
                            BaseFee = 3.5,
                            City = "Tartu",
                            VehicleType = "Car"
                        },
                        new
                        {
                            Id = 5,
                            BaseFee = 3.0,
                            City = "Tartu",
                            VehicleType = "Scooter"
                        },
                        new
                        {
                            Id = 6,
                            BaseFee = 2.5,
                            City = "Tartu",
                            VehicleType = "Bike"
                        },
                        new
                        {
                            Id = 7,
                            BaseFee = 3.0,
                            City = "Pärnu",
                            VehicleType = "Car"
                        },
                        new
                        {
                            Id = 8,
                            BaseFee = 2.5,
                            City = "Pärnu",
                            VehicleType = "Scooter"
                        },
                        new
                        {
                            Id = 9,
                            BaseFee = 2.0,
                            City = "Pärnu",
                            VehicleType = "Bike"
                        });
                });

            modelBuilder.Entity("WeatherObservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AirTemperature")
                        .HasColumnType("REAL");

                    b.Property<string>("Station")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("WMOCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("WeatherPhenomenon")
                        .HasColumnType("TEXT");

                    b.Property<double>("WindSpeed")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("WeatherObservations");
                });
#pragma warning restore 612, 618
        }
    }
}
